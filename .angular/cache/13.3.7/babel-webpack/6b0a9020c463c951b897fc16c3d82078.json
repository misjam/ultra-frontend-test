{"ast":null,"code":"import _asyncToGenerator from \"/Users/mirkomarkovic/Work/ultra-frontend-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { SearchComponent } from './search.component';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\ndescribe('SearchComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [SearchComponent],\n      imports: [HttpClientTestingModule]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(SearchComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('Remove search param on removeQuery()', () => {\n    component.searchQueries = ['Dog', 'Cat', 'Mouse'];\n    component.removeQuery('Dog');\n    expect(component.searchQueries).toContain('Cat');\n    expect(component.searchQueries).toContain('Mouse');\n    expect(component.searchQueries).not.toContain('Dog');\n  });\n  it('Add search query on addSearchQuery()', () => {\n    component.searchQueries = ['Dog', 'Cat'];\n    component.searchCtrl.setValue('Mouse');\n    component.addSearchQuery();\n    expect(component.searchQueries).toContain('Cat');\n    expect(component.searchQueries).toContain('Mouse');\n    expect(component.searchQueries).toContain('Dog');\n  });\n});","map":{"version":3,"sources":["/Users/mirkomarkovic/Work/ultra-frontend-test/src/app/page-content/search/search.component.spec.ts"],"names":["TestBed","SearchComponent","HttpClientTestingModule","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","compileComponents","createComponent","componentInstance","detectChanges","it","searchQueries","removeQuery","expect","toContain","not","searchCtrl","setValue","addSearchQuery"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACAC,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAC9B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMN,OAAO,CAACO,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACP,eAAD,CADmB;AAEjCQ,MAAAA,OAAO,EAAE,CAACP,uBAAD;AAFwB,KAA/B,EAIDQ,iBAJC,EAAN;AAKH,GANS,EAAV;AAOAJ,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGL,OAAO,CAACW,eAAR,CAAwBV,eAAxB,CAAV;AACAG,IAAAA,SAAS,GAAGC,OAAO,CAACO,iBAApB;AACAP,IAAAA,OAAO,CAACQ,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM;AAC7CV,IAAAA,SAAS,CAACW,aAAV,GAA0B,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAA1B;AACAX,IAAAA,SAAS,CAACY,WAAV,CAAsB,KAAtB;AACAC,IAAAA,MAAM,CAACb,SAAS,CAACW,aAAX,CAAN,CAAgCG,SAAhC,CAA0C,KAA1C;AACAD,IAAAA,MAAM,CAACb,SAAS,CAACW,aAAX,CAAN,CAAgCG,SAAhC,CAA0C,OAA1C;AACAD,IAAAA,MAAM,CAACb,SAAS,CAACW,aAAX,CAAN,CAAgCI,GAAhC,CAAoCD,SAApC,CAA8C,KAA9C;AACH,GANC,CAAF;AAOAJ,EAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM;AAC7CV,IAAAA,SAAS,CAACW,aAAV,GAA0B,CAAC,KAAD,EAAQ,KAAR,CAA1B;AACAX,IAAAA,SAAS,CAACgB,UAAV,CAAqBC,QAArB,CAA8B,OAA9B;AACAjB,IAAAA,SAAS,CAACkB,cAAV;AACAL,IAAAA,MAAM,CAACb,SAAS,CAACW,aAAX,CAAN,CAAgCG,SAAhC,CAA0C,KAA1C;AACAD,IAAAA,MAAM,CAACb,SAAS,CAACW,aAAX,CAAN,CAAgCG,SAAhC,CAA0C,OAA1C;AACAD,IAAAA,MAAM,CAACb,SAAS,CAACW,aAAX,CAAN,CAAgCG,SAAhC,CAA0C,KAA1C;AACH,GAPC,CAAF;AAQH,CA9BO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { SearchComponent } from './search.component';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\ndescribe('SearchComponent', () => {\n    let component;\n    let fixture;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [SearchComponent],\n            imports: [HttpClientTestingModule]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(SearchComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n    });\n    it('Remove search param on removeQuery()', () => {\n        component.searchQueries = ['Dog', 'Cat', 'Mouse'];\n        component.removeQuery('Dog');\n        expect(component.searchQueries).toContain('Cat');\n        expect(component.searchQueries).toContain('Mouse');\n        expect(component.searchQueries).not.toContain('Dog');\n    });\n    it('Add search query on addSearchQuery()', () => {\n        component.searchQueries = ['Dog', 'Cat'];\n        component.searchCtrl.setValue('Mouse');\n        component.addSearchQuery();\n        expect(component.searchQueries).toContain('Cat');\n        expect(component.searchQueries).toContain('Mouse');\n        expect(component.searchQueries).toContain('Dog');\n    });\n});\n"]},"metadata":{},"sourceType":"module"}